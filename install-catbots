#!/usr/bin/env bash
set -e

if [ $EUID == 0 ]; then
    echo "This script must not be run as root"
    exit
fi

if ! [ -e "/opt/cathook/" ]; then
    echo "Please install Cathook on your main TF2, first."
    echo "https://cathook.club/s/ch/git"
    exit
fi

if [ ! -x "$(command -v touch)" ]; then
    echo "Touch doesn't exist. Please install it."
    exit
fi

if [ ! -x "$(command -v npm)" ]; then
    echo "NPM doesn't exist. Please install it."
    exit
fi

if [ ! -x "$(command -v firejail)" ]; then
    echo "Firejail doesn't exist. Please install it."
    exit
fi

if [ ! -x "$(command -v route)" ] && [ ! -x /sbin/route ]; then
    echo "Route doesn't exist. Please install it (net-tools on archlinux/manjaro)."
    exit
fi

if [ ! -x "$(command -v pgrep)" ]; then
    echo "Pgrep doesn't exist. Please install it."
    exit
fi

if [ ! -x "$(command -v xhost)" ]; then
    echo "XHost doesn't exist. Please install it."
    exit
fi

if [ ! -d "./cathook" ]; then
    URL="$(curl --max-time 10 -Ls -o /dev/null -w %{url_effective} https://cathook.club/s/ch/git || echo error)"
    git clone --recursive $URL
fi


if [ ! -f ./kisak ]; then
    echo Generating username and adding groups!
    name=$(cat /dev/urandom | tr -dc 'a-z' | fold -w 6 | head -n 1)
    echo $name > kisak

    sudo groupadd `cat kisak`s
    sudo usermod -a -G `cat kisak`s $USER
fi

basename="$(cat kisak)"
[ -z "$basename" ] && echo "Username file empty!" && exit 1

if ! [ -e "/opt/steamapps" ]; then
    pushd ~/.steam/steam/steamapps
    steamapps="$(pwd -P)"
    popd

    while true; do
        read -p "Is $steamapps your steamapps directory? y/n " yn
        case $yn in
            [Yy]* ) break;;
            [Nn]* ) exit;;
            * ) echo "Please answer yes or no.";;
        esac
    done
    
    sudo ln -s "$steamapps" "/opt/steamapps"

    # fuck permissions!!!

    sudo chown -h $USER:`cat kisak`s "/opt/steamapps"
    sudo chown -R $USER:`cat kisak`s "$steamapps"
    pushd $steamapps; while [ $(pwd) != "/" ]; do echo $(pwd); sudo chmod +x .; cd ..; done; popd
    sudo chmod -R g+rwx "/opt/steamapps"
    sudo chmod +x "/opt"
    sudo chmod +x "/opt/steamapps"
    sudo chmod -R go+X "$steamapps"
fi

if [ ! -f ./users ]; then
    while true; do
        re='^[0-9]+$'
        read -p "How many bots would you like to host? " yournumber
        if [[ $yournumber =~ $re ]] ; then
            echo $yournumber > ./users
            for i in $(seq 1 $yournumber)
            do
                if [ -d "/home/$basename-$i" ]; then
                    echo "$basename-$i already exists"
                    continue
                fi
                echo "Creating user $basename-$i"
                sudo useradd -m $basename-$i
                sudo usermod -g `cat kisak`s $basename-$i
                sudo mkdir -p /home/$basename-$i
                sudo chown `cat kisak`-$i:`cat kisak`s /home/$basename-$i
                sudo -H -u $basename-$i bash -c "mkdir -p ~/.steam"
                sudo -H -u $basename-$i bash -c "touch ~/.steam/steam_install_agreement.txt"
            done
            break
        fi
        echo "Error: Not a number" >&2
    done
fi

if [ -f ./users ] && [ ! -f ./steams ]; then
    xhost + >/dev/null
    echo "Starting Steam for $basename-1"
    sudo su - $basename-1 -c "DISPLAY=$DISPLAY steam &>/tmp/steam-$basename-1.log 2>&1 &"
    read -p "Press enter if steam has reached the login screen. "
    sudo kill -9 $(pgrep -u $basename-1 steam)

    if ! sudo test -x "/home/$basename-1/.local/share/Steam/steam"; then
        echo Garbage distro detected.
        IS_GARBAGE_DISTRO=true
        sudo rm -r "/home/$basename-1/.steam/steam/steamapps"
        sudo -H -u $basename-1 bash -c "ln -s \"/opt/steamapps\" \"/home/$basename-1/.steam/steam\""
    else
        IS_GARBAGE_DISTRO=false
        sudo rm -r "/home/$basename-1/.local/share/Steam/steamapps"
        sudo -H -u $basename-1 bash -c "ln -s \"/opt/steamapps\" \"/home/$basename-1/.local/share/Steam\""
    fi
    
    usercount=$(cat ./users)
    if [ "$usercount" -ge "2" ]; then
        for i in $(seq 2 $usercount)
        do
            echo "Copying Steam for $basename-$i"
            if [ "$IS_GARBAGE_DISTRO" == true ]; then
                sudo rsync -av --info=progress2 --info=name0 /home/$basename-1/.steam /home/$basename-$i/
                sudo chown -R $basename-$i:$basename-$i "/home/$basename-$i/.steam"
            else
                sudo -H -u $basename-$i bash -c "mkdir -p /home/$basename-$i/.local/share"
                sudo rsync -av --info=progress2 --info=name0 /home/$basename-1/.local/share/Steam /home/$basename-$i/.local/share
                sudo chown -R $basename-$i:$basename-$i "/home/$basename-$i/.local/share/Steam"
            fi
        done
    fi
    touch ./steams
fi

if [ ! -f /opt/cathook/bin/libcathook-textmode.so ]; then
    numcpu=$(grep -c ^processor /proc/cpuinfo)
    mkdir -p build
    pushd build
    cmake -DCMAKE_BUILD_TYPE=Release -DVisuals_DrawType="Textmode" -DVACBypass=1 -DEnableWarnings=0 -DEnableOnlineFeatures=0 ../cathook/
    make -j$numcpu
    if ! [ -e "bin/libcathook.so" ]; then
        echo "FATAL: Build failed"
        exit
    fi
    popd
    sudo mkdir -p "/opt/cathook/bin/"
    sudo cp "build/bin/libcathook.so" "/opt/cathook/bin/libcathook-textmode.so"
    sudo chmod -R 0755 /opt/cathook/data/configs/
fi

if [ ! -d "./just-disable-vac" ]; then
    git clone https://gitlab.com/nullworks/cathook/just-disable-vac
    pushd just-disable-vac
    mkdir -p build && pushd build
    cmake .. && make
    popd; popd
fi

if [ ! -d "./account-generator" ]; then
    git clone --recursive https://gitlab.com/nullworks/cathook/account-generator
    pushd account-generator
    ./install.sh
    popd
fi

if [ ! -d "./cathook-ipc-server" ]; then
    git clone --recursive https://gitlab.com/nullworks/cathook/cathook-ipc-server
    pushd cathook-ipc-server
    ./install.sh
    popd
fi

if [ ! -d "./cathook-ipc-web-panel" ]; then
    git clone --recursive https://gitlab.com/nullworks/cathook/cathook-ipc-web-panel
    pushd cathook-ipc-web-panel
    ./install.sh
    popd
fi

if [ ! -d "./cathook-ipc-web-panel/logs" ]; then
    mkdir -p ./cathook-ipc-web-panel/logs
    touch ./cathook-ipc-web-panel/logs/main.log
fi

echo "Installation finished. Please ensure that all navmeshes are inside your map folder (see https://gitlab.com/nullworks/cathook/catbot-database)."

echo
echo "The web-panel and account storage can be started with ./start"
echo
echo "Accgen is broken due to recent recaptcha updates, as well as us running out of accounts to provide. You must create your own list of accounts to use for catbots."
echo "Create a list of steam accounts, and save them to catbot-setup/accounts.txt in username:password format."
echo "Then use \"node convert.js\" to to format it. Rename the resulting file to accounts.cg.json, and copy it to the account-generator folder."
